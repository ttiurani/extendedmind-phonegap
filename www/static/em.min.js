
(function(){'use strict';angular.module('em.app',['ngMobile','em.directives','em.filters','em.services']);angular.module('em.directives',[]);angular.module('em.filters',[]);angular.module('em.services',['em.base64']);angular.module('em.app').config(['$locationProvider','$routeProvider',function($locationProvider,$routeProvider){$routeProvider.when('/',{templateUrl:'static/partials/home.html',controller:'HomeController'});$routeProvider.when('/404',{templateUrl:'static/partials/pageNotFound.html',controller:'PageNotFoundController'});$routeProvider.when('/login',{templateUrl:'static/partials/login.html',controller:'LoginController'});$routeProvider.when('/my',{controller:'MyController',templateUrl:'static/partials/my.html',resolve:{authenticationRequired:['$rootScope',function($rootScope){$rootScope.$broadcast('event:authenticationRequired');}]}});$routeProvider.when('/my/notes',{controller:'NotesController',templateUrl:'static/partials/my/notes.html',resolve:{authenticationRequired:['$rootScope',function($rootScope){$rootScope.$broadcast('event:authenticationRequired');}]}});$routeProvider.when('/my/tasks',{controller:'TasksController',templateUrl:'static/partials/my/tasks.html',resolve:{authenticationRequired:['$rootScope',function($rootScope){$rootScope.$broadcast('event:authenticationRequired');}]}});$routeProvider.when('/my/tasks/context/:uuid',{controller:'ContextController',templateUrl:'static/partials/my/tasks/context.html',resolve:{authenticationRequired:['$rootScope',function($rootScope){$rootScope.$broadcast('event:authenticationRequired');}]}});$routeProvider.when('/my/tasks/new/:uuid',{controller:'NewTaskController',templateUrl:'static/partials/my/tasks/new.html',resolve:{authenticationRequired:['$rootScope',function($rootScope){$rootScope.$broadcast('event:authenticationRequired');}]}});$routeProvider.when('/my/tasks/project/:uuid',{controller:'ProjectController',templateUrl:'static/partials/my/tasks/project.html',resolve:{authenticationRequired:['$rootScope',function($rootScope){$rootScope.$broadcast('event:authenticationRequired');}]}});$routeProvider.otherwise({controller:'PageNotFoundController',redirectTo:'404'});$locationProvider.html5Mode(true);}]);angular.module('em.app').run(['$document','$location','$rootScope','userAuthenticate',function($document,$location,$rootScope,userAuthenticate){$rootScope.$on('event:authenticationRequired',function(){userAuthenticate.authenticate();});$rootScope.$on('event:loginRequired',function(){$location.path('/login');});$rootScope.$on('event:loginSuccess',function(){$location.path('/my');});}]);}());(function(){'use strict';angular.module('em.app').controller('ContextController',['$scope','$routeParams','activeItem','errorHandler','itemsArray','itemsRequest','tagsArray','tasksArray',function($scope,$routeParams,activeItem,errorHandler,itemsArray,itemsRequest,tagsArray,tasksArray){$scope.errorHandler=errorHandler;if(activeItem.getItem()){$scope.context=activeItem.getItem();$scope.subtasks=itemsArray.getTagItems(tasksArray.getTasks(),$scope.context.uuid);}else{itemsRequest.getItems(function(itemsResponse){itemsArray.setItems(itemsResponse.items);tagsArray.setTags(itemsResponse.tags);tasksArray.setTasks(itemsResponse.tasks);$scope.context=itemsArray.getItemByUuid(tagsArray.getTags(),$routeParams.uuid);$scope.subtasks=itemsArray.getTagItems(tasksArray.getTasks(),$scope.context.uuid);},function(error){});}
$scope.setActiveItem=function(item){activeItem.setItem(item);};}]);}());(function(){'use strict';angular.module('em.app').controller('HomeController',['$scope','errorHandler',function($scope,errorHandler){}]);}());(function(){'use strict';angular.module('em.app').controller('LoginController',['$rootScope','$scope','authenticateRequest','errorHandler','userSession',function($rootScope,$scope,authenticateRequest,errorHandler,userSession){$scope.errorHandler=errorHandler;$scope.userLogin=function(){userSession.setCredentials($scope.user.username,$scope.user.password);userSession.setUserRemembered($scope.user.remember);authenticateRequest.login(function(authenticateResponse){userSession.setUserSessionData(authenticateResponse);$rootScope.$broadcast('event:loginSuccess');},function(error){$rootScope.$broadcast('event:loginRequired');});};}]);}());(function(){'use strict';angular.module('em.app').controller('MyController',['$location','$rootScope','$scope','activeItem','errorHandler','itemsArray','itemsRequest','itemsResponse','notesArray','tagsArray','tasksArray',function($location,$rootScope,$scope,activeItem,errorHandler,itemsArray,itemsRequest,itemsResponse,notesArray,tagsArray,tasksArray){$scope.errorHandler=errorHandler;$rootScope.pageAnimation=null;itemsRequest.getItems(function(itemsResponse){itemsArray.setItems(itemsResponse.items);notesArray.setNotes(itemsResponse.notes);tagsArray.setTags(itemsResponse.tags);tasksArray.setTasks(itemsResponse.tasks);$scope.items=itemsArray.getItems();$scope.notes=notesArray.getNotes();$scope.tags=tagsArray.getTags();$scope.tasks=tasksArray.getTasks();},function(error){});$scope.addNewItem=function(){itemsRequest.putItem($scope.newItem,function(putItemResponse){itemsResponse.putItemContent($scope.newItem,putItemResponse);itemsArray.putNewItem($scope.newItem);$scope.newItem={};},function(error){});};$scope.setActiveItem=function(item){activeItem.setItem(item);};$scope.swipeLeft=function(asd){$rootScope.pageAnimation={enter:'em-page-enter-right',leave:'em-page-leave-left'};$location.path('/my/tasks');};$scope.swipeRight=function(){$rootScope.pageAnimation={enter:'em-page-enter-left',leave:'em-page-leave-right'};$location.path('/my/notes');};}]);}());(function(){'use strict';angular.module('em.app').controller('NewTaskController',['$routeParams','$scope','activeItem','errorHandler','itemsArray','itemsRequest','tagsArray','tasksArray','tasksRequest','tasksResponse',function($routeParams,$scope,activeItem,errorHandler,itemsArray,itemsRequest,tagsArray,tasksArray,tasksRequest,tasksResponse){$scope.errorHandler=errorHandler;if(activeItem.getItem()){$scope.newTask=activeItem.getItem();$scope.projects=tasksArray.getProjects();}else{itemsRequest.getItems(function(itemsResponse){itemsArray.setItems(itemsResponse.items);tasksArray.setTasks(itemsResponse.tasks);tagsArray.setTags(itemsResponse.tags);$scope.projects=tasksArray.getProjects();$scope.newTask=itemsArray.getItemByUuid(itemsArray.getItems(),$routeParams.uuid);},function(error){});}
$scope.addNewTask=function(task){if($scope.parentTask){$scope.newTask.relationships={};$scope.newTask.relationships.parentTask=$scope.parentTask.uuid;}
tasksRequest.putTask($scope.newTask,function(putTaskResponse){tasksResponse.putTaskContent($scope.newTask,putTaskResponse);tasksArray.putNewTask($scope.newTask);$scope.newTask={};},function(putTaskResponse){});};}]);}());(function(){'use strict';angular.module('em.app').controller('NotesController',['$location','$rootScope','$scope','activeItem','errorHandler','itemsRequest','notesArray',function($location,$rootScope,$scope,activeItem,errorHandler,itemsRequest,notesArray){$scope.errorHandler=errorHandler;$rootScope.pageAnimation=null;itemsRequest.getItems(function(itemsResponse){notesArray.setNotes(itemsResponse.notes);$scope.notes=notesArray.getNotes();},function(error){});$scope.notesListFilter=true;$scope.setActiveItem=function(item){activeItem.setItem(item);};$scope.swipeLeft=function(asd){$rootScope.pageAnimation={enter:'em-page-enter-right',leave:'em-page-leave-left'};$location.path('/my');};$scope.swipeRight=function(){$rootScope.pageAnimation={enter:'em-page-enter-left',leave:'em-page-leave-right'};$location.path('/my/tasks');};}]);}());(function(){'use strict';angular.module('em.app').controller('PageNotFoundController',['$scope','errorHandler',function($scope,errorHandler){$scope.errorHandler=errorHandler;}]);}());(function(){'use strict';angular.module('em.app').controller('ProjectController',['$scope','$routeParams','activeItem','errorHandler','itemsArray','itemsRequest','tagsArray','tasksArray',function($scope,$routeParams,activeItem,errorHandler,itemsArray,itemsRequest,tagsArray,tasksArray){$scope.errorHandler=errorHandler;if(activeItem.getItem()){$scope.project=activeItem.getItem();$scope.subtasks=itemsArray.getItemsByUuid(tasksArray.getSubtasks(),$scope.project.uuid);}else{itemsRequest.getItems(function(itemsResponse){itemsArray.setItems(itemsResponse.items);tasksArray.setTasks(itemsResponse.tasks);tagsArray.setTags(itemsResponse.tags);$scope.tasks=tasksArray.getTasks();$scope.projects=tasksArray.getProjects();$scope.project=itemsArray.getItemByUuid(tasksArray.getProjects(),$routeParams.uuid);$scope.subtasks=itemsArray.getItemsByUuid(tasksArray.getSubtasks(),$scope.project.uuid);},function(error){});}
$scope.setActiveItem=function(tag){activeItem.setItem(tag);};}]);}());(function(){'use strict';angular.module('em.app').controller('TasksController',['$location','$rootScope','$scope','activeItem','errorHandler','itemsArray','itemsRequest','tagsArray','tasksArray','tasksRequest','tasksResponse',function($location,$rootScope,$scope,activeItem,errorHandler,itemsArray,itemsRequest,tagsArray,tasksArray,tasksRequest,tasksResponse){$scope.errorHandler=errorHandler;$rootScope.pageAnimation=null;itemsRequest.getItems(function(itemsResponse){itemsArray.setItems(itemsResponse.items);tasksArray.setTasks(itemsResponse.tasks);tagsArray.setTags(itemsResponse.tags);$scope.tasks=tasksArray.getTasks();$scope.tags=tagsArray.getTags();$scope.projects=tasksArray.getProjects();$scope.subtasks=tasksArray.getSubtasks();},function(error){});$scope.tasksListFilter=true;$scope.taskChecked=function(index){$scope.task=$scope.tasks[index];if($scope.task.done){tasksRequest.completeTask($scope.task,function(completeTaskResponse){tasksResponse.putTaskContent($scope.task,completeTaskResponse);},function(completeTaskResponse){});}else{tasksRequest.uncompleteTask($scope.task,function(uncompleteTaskResponse){tasksResponse.deleteTaskProperty($scope.task,'completed');},function(uncompleteTaskResponse){});}};$scope.setActiveItem=function(item){activeItem.setItem(item);};$scope.swipeLeft=function(asd){$rootScope.pageAnimation={enter:'em-page-enter-right',leave:'em-page-leave-left'};$location.path('/my/notes');};$scope.swipeRight=function(){$rootScope.pageAnimation={enter:'em-page-enter-left',leave:'em-page-leave-right'};$location.path('/my');};}]);}());(function(){'use strict';angular.module('em.directives').directive('appVersion',['version',function(version){return function(scope,element,attrs){return element.text(version);};}]);angular.module('em.directives').directive('eatClick',[function(){return function(scope,element,attrs){$(element).click(function(event){event.preventDefault();});};}]);angular.module('em.directives').directive('errorAlertBar',['$parse',function($parse){return{restrict:'A',templateUrl:'static/partials/templates/errorMessage.html',link:function(scope,elem,attrs){var alertMessageAttr=attrs.alertmessage;scope.errorMessage=null;scope.$watch(alertMessageAttr,function(newValue){scope.errorMessage=newValue;});scope.hideAlert=function(){scope.errorMessage=null;$parse(alertMessageAttr).assign(scope,null);};}};}]);angular.module('em.directives').directive('urlList',[function(){return{restrict:'A',templateUrl:'static/partials/templates/urlList.html'};}]);}());(function(){'use strict';angular.module('em.directives').directive('expander',function(){return{restrict:'EA',replace:true,transclude:true,scope:{title:'=expanderTitle'},templateUrl:'static/partials/templates/expandedContent.html',link:function(scope,element,attrs){scope.showMe=false;scope.toggle=function toggle(){scope.showMe=!scope.showMe;};}};});angular.module('em.directives').directive('newTag',[function(){return{restrict:'A',templateUrl:'static/partials/templates/newTag.html',link:function(scope,element,attrs){scope.showEditNewTag=false;scope.editNewTag=function editNewTag(){scope.showEditNewTag=true;};}};}]);angular.module('em.directives').directive('newTask',[function(){return{restrict:'A',templateUrl:'static/partials/templates/newTask.html'};}]);angular.module('em.directives').directive('itemsList',[function(){return{restrict:'A',templateUrl:'static/partials/templates/itemsList.html',transclude:true,link:function(scope,element,attrs){scope.showMe=false;scope.toggleItemsList=function toggleItemsList(){scope.showMe=!scope.showMe;};var itemsFilterAttr=attrs.itemsfilter;scope.$watch(itemsFilterAttr,function(newValue){scope.itemsListFilter=newValue;});}};}]);angular.module('em.directives').directive('contextsList',[function(){return{restrict:'A',templateUrl:'static/partials/templates/contextsList.html'};}]);angular.module('em.directives').directive('tasks',[function(){return{restrict:'A',templateUrl:'static/partials/my/tasks.html',controller:'TasksController'};}]);angular.module('em.directives').directive('notes',[function(){return{restrict:'A',templateUrl:'static/partials/my/notes.html',controller:'NotesController'};}]);angular.module('em.directives').directive('projectsList',[function(){return{restrict:'A',templateUrl:'static/partials/templates/projectsList.html'};}]);angular.module('em.directives').directive('tasksList',[function(){return{restrict:'A',templateUrl:'static/partials/templates/tasksList.html',transclude:true,link:function(scope,element,attrs){var tasksFilterAttr=attrs.tasksfilter;scope.$watch(tasksFilterAttr,function(newValue){scope.tasksListFilter=newValue;});}};}]);angular.module('em.directives').directive('taskContent',[function(){return{restrict:'A',templateUrl:'static/partials/templates/taskContent.html',link:function(scope,element,attrs){scope.showMe=false;scope.expandTask=function expandTask(){scope.showMe=!scope.showMe;};}};}]);angular.module('em.directives').directive('notesList',[function(){return{restrict:'A',templateUrl:'static/partials/templates/notesList.html',transclude:true,link:function(scope,element,attrs){var notesFilterAttr=attrs.notesfilter;scope.$watch(notesFilterAttr,function(newValue){scope.notesListFilter=newValue;});}};}]);}());(function(){'use strict';angular.module('em.filters').filter('interpolate',['version',function(version){return function(text){return String(text).replace(/\%VERSION\%/mg,version);};}]);angular.module('em.filters').filter('tagTitle',['itemsArray','tagsArray',function(itemsArray,tagsArray){var userItemsFilter=function(taskTags){var filteredValues,i,tag,tags;filteredValues=[];if(taskTags){i=0;tags=tagsArray.getTags();while(taskTags[i]){tag=itemsArray.getItemByUuid(tags,taskTags[i]);filteredValues.push(tag);i++;}}
return filteredValues;};return userItemsFilter;}]);angular.module('em.filters').filter('visibleTaskContent',['itemsArray','tagsArray',function(itemsArray,tagsArray){var userItemsFilter=function(task){var filteredValues,i,tag,tags;filteredValues=[];if(task.due){filteredValues.push(task.due);}
return filteredValues;};return userItemsFilter;}]);}());(function(){'use strict';angular.module('em.services').factory('userAuthenticate',['$rootScope','authenticateRequest','userSession','userCookie','userSessionStorage',function($rootScope,authenticateRequest,userSession,userCookie,userSessionStorage){return{authenticate:function(){if(userSessionStorage.isUserAuthenticated()){if(!userSession.getCredentials()){userSession.setEncodedCredentials(userSessionStorage.getHttpAuthorizationHeader());}}else if(userCookie.isUserRemembered()){userSession.setCredentials('token',userCookie.getUserToken());userSession.setUserRemembered(true);authenticateRequest.login(function(authenticateResponse){userSession.setUserSessionData(authenticateResponse);$rootScope.$broadcast('event:loginSuccess');},function(error){$rootScope.$broadcast('event:loginRequired');});}else{$rootScope.$broadcast('event:loginRequired');}}};}]);angular.module('em.services').factory('userSession',['base64','httpBasicAuth','userCookie','userSessionStorage',function(base64,httpBasicAuth,userCookie,userSessionStorage){var rememberMe=false;return{setUserSessionData:function(authenticateResponse){this.setCredentials('token',authenticateResponse.token);userSessionStorage.setHttpAuthorizationHeader(this.getCredentials());if(this.getUserRemembered()){userCookie.setUserToken(authenticateResponse.token);}
userSessionStorage.setUserUUID(authenticateResponse.userUUID);},setCredentials:function(username,password){this.setEncodedCredentials(base64.encode(username+':'+password));},setEncodedCredentials:function(userpass){httpBasicAuth.setEncodedCredentials(userpass);},getCredentials:function(){return httpBasicAuth.getCredentials();},setUserRemembered:function(remember){rememberMe=remember;},getUserRemembered:function(){return rememberMe===true;}};}]);angular.module('em.services').factory('authenticateRequest',['httpRequest','userSession',function(httpRequest,userSession){return{login:function(success,error){httpRequest.post('/api/authenticate',{rememberMe:userSession.getUserRemembered()},function(authenticateResponse){success(authenticateResponse);},function(authenticateResponse){error(authenticateResponse);});}};}]);angular.module('em.services').factory('userCookie',[function(){return{setUserToken:function(token){$.cookie('token',token,{expires:7,path:'/'});},getUserToken:function(){return $.cookie('token');},clearUserToken:function(){$.removeCookie('token');},isUserRemembered:function(){return $.cookie('token')!==undefined;}};}]);angular.module('em.services').factory('userSessionStorage',[function(){return{setHttpAuthorizationHeader:function(authorizationHeader){sessionStorage.setItem('authorizationHeader',authorizationHeader);},getHttpAuthorizationHeader:function(){return sessionStorage.getItem('authorizationHeader');},clearHttpAuthorizationHeader:function(){sessionStorage.removeItem('authorizationHeader');},setUserUUID:function(userUUID){sessionStorage.setItem('userUUID',userUUID);},getUserUUID:function(){return sessionStorage.getItem('userUUID');},clearUserUUID:function(){sessionStorage.removeItem('userUUID');},isUserAuthenticated:function(){return sessionStorage.getItem('authorizationHeader')!==null;}};}]);}());(function(){'use strict';angular.module('em.services').value('version',0.1);}());(function(){'use strict';angular.module('em.services').factory('errorHandler',[function(){return{errorMessage:null,setError:function(errorMessage){this.errorMessage=errorMessage;},clear:function(){this.errorMessage=null;}};}]);}());(function(){'use strict';angular.module('em.services').config(['$httpProvider',function($httpProvider){$httpProvider.interceptors.push('httpInterceptor');}]);angular.module('em.services').factory('httpInterceptor',['$q','$rootScope','errorHandler',function($q,$rootScope,errorHandler){return{request:function(config){return config||$q.when(config);},requestError:function(rejection){return $q.reject(rejection);},response:function(response){return response||$q.when(response);},responseError:function(rejection){errorHandler.setError(rejection.data);if(rejection.status===403){$rootScope.$broadcast('event:authenticationRequired');}else if(rejection.status===419){$rootScope.$broadcast('event:authenticationRequired');}
return $q.reject(rejection);}};}]);angular.module('em.services').factory('httpBasicAuth',['$http',function($http){$http.defaults.headers.common.Authorization='Basic ';var encoded;return{setEncodedCredentials:function(userpass){encoded=userpass;$http.defaults.headers.common.Authorization='Basic '+encoded;},getCredentials:function(){return encoded;},clearCredentials:function(){$http.defaults.headers.common.Authorization='Basic ';}};}]);angular.module('em.services').factory('httpRequest',['$http',function($http){var httpRequest={};angular.forEach(['get'],function(name){httpRequest[name]=function(url,success,error){return $http({method:name,url:url,cache:true}).success(function(response){success(response);}).error(function(response){error(response);});};});angular.forEach(['delete','head','jsonp'],function(name){httpRequest[name]=function(url,success,error){return $http({method:name,url:url}).success(function(response){success(response);}).error(function(response){error(response);});};});angular.forEach(['post','put'],function(name){httpRequest[name]=function(url,data,success,error){return $http[name](url,data).success(function(response){success(response);}).error(function(response){error(response);});};});return httpRequest;}]);}());(function(){'use strict';angular.module('em.services').factory('itemsRequest',['httpRequest','itemsArray','userSessionStorage',function(httpRequest,itemsArray,userSessionStorage){return{getItems:function(success,error){httpRequest.get('/api/'+userSessionStorage.getUserUUID()+'/items',function(itemsResponse){success(itemsResponse);},function(itemsResponse){error(itemsResponse);});},putItem:function(item,success,error){httpRequest.put('/api/'+userSessionStorage.getUserUUID()+'/item',item,function(putItemResponse){success(putItemResponse);},function(putItemResponse){error(putItemResponse);});},editItem:function(item,success,error){httpRequest.put('/api/'+userSessionStorage.getUserUUID()+'/item'+item.uuid,item,function(editItemResponse){success(editItemResponse);},function(editItemResponse){error(editItemResponse);});},deleteItem:function(itemUUID,success,error){httpRequest.put('/api/'+userSessionStorage.getUserUUID()+'/item'+itemUUID,function(deleteItemResponse){success(deleteItemResponse);},function(deleteItemResponse){error(deleteItemResponse);});}};}]);angular.module('em.services').factory('itemsResponse',[function(){return{putItemContent:function(item,putItemResponse){angular.forEach(putItemResponse,function(value,key){item[key]=value;});},deleteItemProperty:function(item,property){delete item[property];}};}]);angular.module('em.services').factory('activeItem',['$rootScope',function($rootScope){var item;return{setItem:function(item){this.item=item;},getItem:function(){return this.item;}};}]);angular.module('em.services').factory('itemsArray',[function(){var items;return{setItems:function(items){this.items=items;},getItems:function(){return this.items;},putNewItem:function(item){if(!this.itemInArray(this.items,item.title)){this.items.push(item);}},getItemByUuid:function(items,uuid){var i=0;while(items[i]){if(items[i].uuid===uuid){return items[i];}
i++;}},getItemsByUuid:function(items,uuid){var i,subtasks;i=0;this.subtasks=[];while(items[i]){if(items[i].relationships.parentTask===uuid){this.subtasks.push(items[i]);}
i++;}
return this.subtasks;},getTagItems:function(items,uuid){var i,j,subtasks;i=0;this.subtasks=[];while(items[i]){if(items[i].relationships){if(items[i].relationships.tags){j=0;while(items[i].relationships.tags[j]){if(items[i].relationships.tags[j]===uuid){this.subtasks.push(items[i]);}
j++;}}}
i++;}
return this.subtasks;},itemInArray:function(items,uuid){var i=0;while(items[i]){if(items[i].uuid===uuid){return true;}
i++;}
return false;}};}]);}());(function(){'use strict';angular.module('em.services').factory('notesResponse',['itemsResponse',function(itemsResponse){return{putNoteContent:function(note,putNoteResponse){itemsResponse.putItemContent(note,putNoteResponse);}};}]);angular.module('em.services').factory('notesArray',['itemsArray',function(itemsArray){var notes;return{setNotes:function(notes){this.notes=notes;},getNotes:function(){return this.notes;},putNewNote:function(note){if(!itemsArray.itemInArray(this.notes,note.title)){this.notes.push(note);}}};}]);}());(function(){'use strict';angular.module('em.services').factory('pageTitle',function(){var pageTitle,subTitle;pageTitle='extended mind';subTitle=null;return{getSubTitle:function(){return subTitle;},getTitle:function(){if(subTitle!==null){return pageTitle+' | '+subTitle;}
return pageTitle;},setSubTitle:function(newsubTitle){subTitle=newsubTitle;return subTitle;}};});}());(function(){'use strict';angular.module('em.services').factory('tagsArray',['itemsArray',function(itemsArray){var tags;return{setTags:function(tags){this.tags=tags;},getTags:function(){return this.tags;},putNewTag:function(tag){if(!itemsArray.itemInArray(this.tags,tag.title)){this.tasks.push(tag);}}};}]);}());(function(){'use strict';angular.module('em.services').factory('tasksRequest',['httpRequest','userSessionStorage',function(httpRequest,userSessionStorage){return{putTask:function(task,success,error){httpRequest.put('/api/'+userSessionStorage.getUserUUID()+'/task',task,function(putTaskResponse){success(putTaskResponse);},function(putTaskResponse){error(putTaskResponse);});},completeTask:function(task,success,error){httpRequest.get('/api/'+userSessionStorage.getUserUUID()+'/task/'+task.uuid+'/complete',function(completeTaskResponse){success(completeTaskResponse);},function(completeTaskResponse){error(completeTaskResponse);});},uncompleteTask:function(task,success,error){httpRequest.get('/api/'+userSessionStorage.getUserUUID()+'/task/'+task.uuid+'/uncomplete',function(uncompleteTaskResponse){success(uncompleteTaskResponse);},function(uncompleteTaskResponse){error(uncompleteTaskResponse);});}};}]);angular.module('em.services').factory('tasksResponse',['itemsResponse',function(itemsResponse){return{putTaskContent:function(task,putTaskResponse){itemsResponse.putItemContent(task,putTaskResponse);},deleteTaskProperty:function(task,property){itemsResponse.deleteItemProperty(task,property);}};}]);angular.module('em.services').factory('tasksArray',['itemsArray',function(itemsArray){var projects,subtasks,tasks;tasks=[];projects=[];subtasks=[];return{setTasks:function(tasks){var i=0;while(tasks[i]){if(tasks[i].relationships){if(tasks[i].relationships.parentTask){this.setSubtask(tasks[i]);}}
if(tasks[i].project){this.setProject(tasks[i]);}else{this.setTask(tasks[i]);}
i++;}},getTasks:function(){return tasks;},setTask:function(task){if(!itemsArray.itemInArray(tasks,task.uuid)){tasks.push(task);}},setProject:function(task){if(!itemsArray.itemInArray(projects,task.uuid)){projects.push(task);}},getProjects:function(){return projects;},setSubtask:function(task){if(!itemsArray.itemInArray(subtasks,task.uuid)){subtasks.push(task);}},getSubtasks:function(){return subtasks;},putNewTask:function(task){if(!itemsArray.itemInArray(tasks,task.uuid)){tasks.push(task);if(task.relationships){if(task.relationships.parentTask){this.setSubtask(task);}}}}};}]);}());